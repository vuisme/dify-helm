{{- if and .Values.sandbox.enabled}}
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
{{ include "dify.ud.annotations" . | indent 4 }}
    descriptions: sandbox
  labels:
{{- include "dify.labels" . | nindent 4 }}
    component: sandbox
    # app: {{ template "dify.sandbox.fullname" . }}
{{ include "dify.ud.labels" . | indent 4 }}
  name: {{ template "dify.sandbox.fullname" . }}
spec:
  replicas: {{ .Values.sandbox.replicas }}
  selector:
    matchLabels:
{{- include "dify.selectorLabels" . | nindent 6 }}
      component: sandbox
      {{/*
      # Required labels for istio
      # app: {{ template "dify.sandbox.fullname" . }}
      # version: {{ (print "v" .Values.serviceMesh.version) | quote }}
      */}}
  template:
    metadata:
      annotations:
        checksum/sandbox-config: {{ include (print $.Template.BasePath "/sandbox-config.yaml") . | sha256sum }}
        checksum/sandbox-secret: {{ include (print $.Template.BasePath "/sandbox-secret.yaml") . | sha256sum }}
{{ include "dify.ud.annotations" . | indent 8 }}
      labels:
{{- include "dify.selectorLabels" . | nindent 8 }}
        component: sandbox
        {{/*
        # Required labels for istio
        # app: {{ template "dify.sandbox.fullname" . }}
        # version: {{ (print "v" .Values.serviceMesh.version) | quote }}
        */}}
{{ include "dify.ud.labels" . | indent 8 }}
    spec:
      serviceAccountName: {{ include "dify.sandbox.serviceAccountName" . }}
      {{- if .Values.image.sandbox.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.sandbox.pullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      {{- if .Values.sandbox.podSecurityContext }}
      securityContext:
{{ toYaml .Values.sandbox.podSecurityContext | indent 8 }}
      {{- end }}
      initContainers:
      - name: update-ca-certificates
        image: "{{ .Values.image.sandbox.repository }}:{{ .Values.image.sandbox.tag }}"
        command:
        - /bin/sh
        - -c
        - |
          # 1. 更新系统根证书
          # 将自定义证书复制到 CA 目录并更新
          ls -l /custom-certs/
          cp /custom-certs/* /usr/local/share/ca-certificates/
          update-ca-certificates

          # 将生成的系统证书复制到共享 Volume
          cp -r /etc/ssl/certs/* /shared-ssl/

          # 2. 生成 Python 证书包
          # 获取 Python 默认证书路径
          CACERT_PATH=$(python -c "import certifi; print(certifi.where())")
          # 获取证书文件所在的目录
          CERT_DIR=$(python -c "import os, certifi; print(os.path.dirname(certifi.where()))")
          # 合并默认证书和自定义证书
          cat /custom-certs/* >> $CACERT_PATH 
          cp -r $CERT_DIR/*  /python-ca/
        securityContext:
          privileged: true
        volumeMounts:
        - name: custom-ca-cert
          mountPath: /custom-certs
        - name: shared-ssl-certs   # 挂载系统证书 Volume
          mountPath: /shared-ssl
        - name: python-ca-bundle   # 挂载 Python Certifi 证书包
          mountPath: /python-ca
      containers:
      - image: "{{ .Values.image.sandbox.repository }}:{{ .Values.image.sandbox.tag }}"
        imagePullPolicy: "{{ .Values.image.sandbox.pullPolicy }}"
        name: sandbox
        {{- if .Values.sandbox.customLivenessProbe }}
        livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.sandbox.customLivenessProbe "context" $) | nindent 10 }}
        {{- else if .Values.sandbox.livenessProbe.enabled }}
        livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.sandbox.livenessProbe "enabled") "context" $) | nindent 10 }}
          httpGet:
            path: /health
            port: sandbox
        {{- end }}
        {{- if .Values.sandbox.customReadinessProbe }}
        readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.sandbox.customReadinessProbe "context" $) | nindent 10 }}
        {{- else if .Values.sandbox.readinessProbe.enabled }}
        readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.sandbox.readinessProbe "enabled") "context" $) | nindent 10 }}
          httpGet:
            path: /health
            port: sandbox
        {{- end }}
        {{- if .Values.sandbox.customStartupProbe }}
        startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.sandbox.customStartupProbe "context" $) | nindent 10 }}
        {{- else if .Values.sandbox.startupProbe.enabled }}
        startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.sandbox.startupProbe "enabled") "context" $) | nindent 10 }}
          tcpSocket:
            port: sandbox
        {{- end }}
        {{- if .Values.sandbox.containerSecurityContext }}
        securityContext:
{{ toYaml .Values.sandbox.containerSecurityContext | indent 10 }}
        {{- end }}
        env:
        {{- if .Values.sandbox.extraEnv }}
          {{- toYaml .Values.sandbox.extraEnv | nindent 8 }}
        {{- end }}
        envFrom:
        - configMapRef:
            name: {{ template "dify.sandbox.fullname" . }}
        - secretRef:
            name: {{ template "dify.sandbox.fullname" . }}
        ports:
          - name: sandbox
            containerPort: 8194
            protocol: TCP
        resources:
          {{- toYaml .Values.sandbox.resources | nindent 12 }}
        securityContext:
          allowPrivilegeEscalation: {{ .Values.sandbox.privileged }}
        volumeMounts:
        - name: shared-ssl-certs      # 挂载系统证书
          mountPath: /etc/ssl/certs   # 覆盖系统证书目录
        - name: python-ca-bundle      # 挂载 Python Certifi 证书包
          mountPath: /usr/local/lib/python3.10/site-packages/certifi
    {{- if and (.Values.nodeSelector) (not .Values.sandbox.nodeSelector) }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.sandbox.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.sandbox.nodeSelector | indent 8 }}
    {{- end }}
    {{- if and (.Values.affinity) (not .Values.sandbox.affinity) }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
    {{- end }}
    {{- if .Values.sandbox.affinity }}
      affinity:
{{ toYaml .Values.sandbox.affinity | indent 8 }}
    {{- end }}
    {{- if and (.Values.tolerations) (not .Values.sandbox.tolerations) }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
    {{- end }}
    {{- if .Values.sandbox.tolerations }}
      tolerations:
{{ toYaml .Values.sandbox.tolerations | indent 8 }}
    {{- end }}
      volumes:
      - name: custom-ca-cert
        configMap:
          name: dify-custom-ca-cert
      - name: shared-ssl-certs   # 系统根证书目录
        emptyDir: {}
      - name: python-ca-bundle   # Python Certifi 证书包
        emptyDir: {}
{{- end }}
